"use strict";
/*
 * ATTENTION: An "eval-source-map" devtool has been used.
 * This devtool is neither made for production nor for readable output files.
 * It uses "eval()" calls to create a separate source file with attached SourceMaps in the browser devtools.
 * If you are trying to read the output file, select a different devtool (https://webpack.js.org/configuration/devtool/)
 * or disable the default devtool with "devtool: false".
 * If you are looking for production-ready output files, see mode: "production" (https://webpack.js.org/configuration/mode/).
 */
self["webpackHotUpdate_N_E"]("app/page",{

/***/ "(app-pages-browser)/./hooks/use-app-state-new.ts":
/*!************************************!*\
  !*** ./hooks/use-app-state-new.ts ***!
  \************************************/
/***/ ((module, __webpack_exports__, __webpack_require__) => {

eval(__webpack_require__.ts("__webpack_require__.r(__webpack_exports__);\n/* harmony export */ __webpack_require__.d(__webpack_exports__, {\n/* harmony export */   useAppStateNew: () => (/* binding */ useAppStateNew)\n/* harmony export */ });\n/* harmony import */ var react__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! react */ \"(app-pages-browser)/./node_modules/.pnpm/next@15.2.4_@babel+core@7.27.4_@playwright+test@1.53.1_react-dom@19.0.0_react@19.0.0__react@19.0.0/node_modules/next/dist/compiled/react/index.js\");\n/* harmony import */ var react__WEBPACK_IMPORTED_MODULE_0___default = /*#__PURE__*/__webpack_require__.n(react__WEBPACK_IMPORTED_MODULE_0__);\n/* harmony import */ var _use_app_state_context__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! ./use-app-state-context */ \"(app-pages-browser)/./hooks/use-app-state-context.ts\");\n/* harmony import */ var _use_session_adapter__WEBPACK_IMPORTED_MODULE_2__ = __webpack_require__(/*! ./use-session-adapter */ \"(app-pages-browser)/./hooks/use-session-adapter.ts\");\n/* harmony import */ var _use_recording_adapter__WEBPACK_IMPORTED_MODULE_3__ = __webpack_require__(/*! ./use-recording-adapter */ \"(app-pages-browser)/./hooks/use-recording-adapter.ts\");\n/* harmony import */ var _use_notes__WEBPACK_IMPORTED_MODULE_4__ = __webpack_require__(/*! ./use-notes */ \"(app-pages-browser)/./hooks/use-notes.ts\");\n/* harmony import */ var _use_transcript_adapter__WEBPACK_IMPORTED_MODULE_5__ = __webpack_require__(/*! ./use-transcript-adapter */ \"(app-pages-browser)/./hooks/use-transcript-adapter.ts\");\n/* harmony import */ var _components_ui_use_toast__WEBPACK_IMPORTED_MODULE_6__ = __webpack_require__(/*! @/components/ui/use-toast */ \"(app-pages-browser)/./components/ui/use-toast.ts\");\n/* harmony import */ var _lib_state_machine__WEBPACK_IMPORTED_MODULE_7__ = __webpack_require__(/*! ../lib/state-machine */ \"(app-pages-browser)/./lib/state-machine.ts\");\n/* __next_internal_client_entry_do_not_use__ useAppStateNew auto */ \n\n\n\n\n\n\n\n/**\n * 新版本的 useAppState Hook\n * 使用 Context 狀態管理，大幅簡化原本 868 行的複雜邏輯\n * 將狀態管理委託給 AppStateContext，Hook 只負責業務邏輯\n */ function useAppStateNew() {\n    var _appData_session;\n    const context = (0,_use_app_state_context__WEBPACK_IMPORTED_MODULE_1__.useAppStateContext)();\n    const { appData, isLoading, error, dispatch, transition } = context;\n    const session = (0,_use_session_adapter__WEBPACK_IMPORTED_MODULE_2__.useSession)();\n    const recording = (0,_use_recording_adapter__WEBPACK_IMPORTED_MODULE_3__.useRecording)();\n    const notes = (0,_use_notes__WEBPACK_IMPORTED_MODULE_4__.useNotes)();\n    const transcript = (0,_use_transcript_adapter__WEBPACK_IMPORTED_MODULE_5__.useTranscript)();\n    const { toast } = (0,_components_ui_use_toast__WEBPACK_IMPORTED_MODULE_6__.useToast)();\n    console.log('🔄 [useAppStateNew] Hook 初始化:', {\n        currentState: appData.state,\n        isRecording: appData.isRecording,\n        sessionId: (_appData_session = appData.session) === null || _appData_session === void 0 ? void 0 : _appData_session.id,\n        transcriptCount: appData.transcriptEntries.length\n    });\n    const [stateMachineManager] = (0,react__WEBPACK_IMPORTED_MODULE_0__.useState)({\n        \"useAppStateNew.useState\": ()=>{\n            const smManager = new _lib_state_machine__WEBPACK_IMPORTED_MODULE_7__.StateMachineManager({\n                currentState: appData.state,\n                isRecording: appData.isRecording,\n                transcriptCount: appData.transcriptEntries.length,\n                session: appData.session || null,\n                error: error\n            });\n            // 立即註冊副作用處理器\n            smManager.registerSideEffectHandler('START_RECORDING', {\n                handleSideEffect: {\n                    \"useAppStateNew.useState\": async ()=>{\n                        var _context_session;\n                        // 從狀態機上下文獲取最新的 session 資訊\n                        const context = smManager.getStateMachine().getContext();\n                        if ((_context_session = context.session) === null || _context_session === void 0 ? void 0 : _context_session.id) {\n                            console.log('🎤 [副作用] START_RECORDING: 開始錄音', context.session.id);\n                            await recording.startRecording(context.session.id);\n                        } else {\n                            console.error('🎤 [副作用] START_RECORDING: 沒有可用的 session');\n                        }\n                    }\n                }[\"useAppStateNew.useState\"]\n            });\n            smManager.registerSideEffectHandler('STOP_RECORDING', {\n                handleSideEffect: {\n                    \"useAppStateNew.useState\": async ()=>{\n                        await stopRecording();\n                    }\n                }[\"useAppStateNew.useState\"]\n            });\n            smManager.registerSideEffectHandler('CONNECT_WEBSOCKET', {\n                handleSideEffect: {\n                    \"useAppStateNew.useState\": async ()=>{\n                        var _context_session;\n                        // 從狀態機上下文獲取最新的 session 資訊\n                        const context = smManager.getStateMachine().getContext();\n                        if ((_context_session = context.session) === null || _context_session === void 0 ? void 0 : _context_session.id) {\n                            console.log('🔌 [副作用] CONNECT_WEBSOCKET: 連接 WebSocket', context.session.id);\n                            await transcript.connect(context.session.id);\n                        } else {\n                            console.error('🔌 [副作用] CONNECT_WEBSOCKET: 沒有可用的 session');\n                        }\n                    }\n                }[\"useAppStateNew.useState\"]\n            });\n            smManager.registerSideEffectHandler('DISCONNECT_WEBSOCKET', {\n                handleSideEffect: {\n                    \"useAppStateNew.useState\": ()=>{\n                        transcript.disconnect();\n                    }\n                }[\"useAppStateNew.useState\"]\n            });\n            smManager.registerSideEffectHandler('FINISH_SESSION', {\n                handleSideEffect: {\n                    \"useAppStateNew.useState\": async ()=>{\n                        await finishSession();\n                    }\n                }[\"useAppStateNew.useState\"]\n            });\n            return smManager;\n        }\n    }[\"useAppStateNew.useState\"]);\n    (0,react__WEBPACK_IMPORTED_MODULE_0__.useEffect)({\n        \"useAppStateNew.useEffect\": ()=>{\n            stateMachineManager.getStateMachine().updateContext({\n                currentState: appData.state,\n                isRecording: appData.isRecording,\n                transcriptCount: appData.transcriptEntries.length,\n                session: appData.session,\n                error: error\n            });\n        }\n    }[\"useAppStateNew.useEffect\"], [\n        appData,\n        error,\n        stateMachineManager\n    ]);\n    // 建立純筆記會話\n    const createNoteSession = (0,react__WEBPACK_IMPORTED_MODULE_0__.useCallback)({\n        \"useAppStateNew.useCallback[createNoteSession]\": async (title)=>{\n            dispatch({\n                type: 'SET_LOADING',\n                payload: true\n            });\n            dispatch({\n                type: 'CLEAR_ERROR'\n            });\n            try {\n                const newSession = await session.createNoteSession(title);\n                if (newSession) {\n                    dispatch({\n                        type: 'SET_SESSION',\n                        payload: newSession\n                    });\n                    // 載入筆記內容\n                    await notes.loadNote(newSession.id);\n                    // 清除本地草稿\n                    localStorage.removeItem('draft_note');\n                    console.log('✅ [useAppStateNew] 純筆記會話建立成功');\n                    toast({\n                        title: '筆記會話已建立',\n                        description: '會話 \"'.concat(title, '\" 建立成功')\n                    });\n                }\n            } catch (err) {\n                const errorMessage = err instanceof Error ? err.message : '建立筆記會話失敗';\n                dispatch({\n                    type: 'SET_ERROR',\n                    payload: errorMessage\n                });\n                console.error('❌ [useAppStateNew] 建立筆記會話失敗:', err);\n                toast({\n                    title: '建立失敗',\n                    description: errorMessage,\n                    variant: 'destructive'\n                });\n            } finally{\n                dispatch({\n                    type: 'SET_LOADING',\n                    payload: false\n                });\n            }\n        }\n    }[\"useAppStateNew.useCallback[createNoteSession]\"], [\n        session,\n        notes,\n        toast,\n        dispatch\n    ]);\n    // 建立錄音會話\n    const createRecordingSession = (0,react__WEBPACK_IMPORTED_MODULE_0__.useCallback)({\n        \"useAppStateNew.useCallback[createRecordingSession]\": async (title)=>{\n            dispatch({\n                type: 'SET_LOADING',\n                payload: true\n            });\n            dispatch({\n                type: 'CLEAR_ERROR'\n            });\n            try {\n                const newSession = await session.createRecordingSession(title, appData.editorContent);\n                if (newSession) {\n                    dispatch({\n                        type: 'SET_SESSION',\n                        payload: newSession\n                    });\n                    // 載入筆記內容\n                    await notes.loadNote(newSession.id);\n                    // 清除本地草稿\n                    localStorage.removeItem('draft_note');\n                    console.log('✅ [useAppStateNew] 錄音會話建立成功');\n                    toast({\n                        title: '錄音會話已建立',\n                        description: '會話 \"'.concat(title, '\" 建立成功')\n                    });\n                }\n            } catch (err) {\n                // 特別處理會話衝突錯誤\n                if (err instanceof Error && err.message.includes('檢測到活躍會話衝突')) {\n                    const conflictMsg = '偵測到會話衝突，請重新整理頁面後再試';\n                    dispatch({\n                        type: 'SET_ERROR',\n                        payload: conflictMsg\n                    });\n                    toast({\n                        title: '會話衝突',\n                        description: '目前已有活躍會話，請重新整理頁面後再試，或等待當前會話結束',\n                        variant: 'destructive'\n                    });\n                    return;\n                }\n                const errorMessage = err instanceof Error ? err.message : '建立錄音會話失敗';\n                dispatch({\n                    type: 'SET_ERROR',\n                    payload: errorMessage\n                });\n                console.error('❌ [useAppStateNew] 建立錄音會話失敗:', err);\n                toast({\n                    title: '建立失敗',\n                    description: errorMessage,\n                    variant: 'destructive'\n                });\n            } finally{\n                dispatch({\n                    type: 'SET_LOADING',\n                    payload: false\n                });\n            }\n        }\n    }[\"useAppStateNew.useCallback[createRecordingSession]\"], [\n        session,\n        notes,\n        toast,\n        dispatch,\n        appData.editorContent\n    ]);\n    // 開始錄音\n    const startRecording = (0,react__WEBPACK_IMPORTED_MODULE_0__.useCallback)({\n        \"useAppStateNew.useCallback[startRecording]\": async (title)=>{\n            console.log(\"🎤 [useAppStateNew] startRecording: 流程開始\");\n            dispatch({\n                type: 'SET_LOADING',\n                payload: true\n            });\n            try {\n                var _session_currentSession;\n                // 檢查活躍會話狀態\n                const latestActiveSession = await session.checkActiveSession();\n                let sessionToRecord = latestActiveSession || session.currentSession;\n                console.log(\"🎤 [useAppStateNew] 會話狀態檢查:\", {\n                    latestActiveSession: latestActiveSession === null || latestActiveSession === void 0 ? void 0 : latestActiveSession.id,\n                    currentSession: (_session_currentSession = session.currentSession) === null || _session_currentSession === void 0 ? void 0 : _session_currentSession.id,\n                    finalSessionToUse: sessionToRecord === null || sessionToRecord === void 0 ? void 0 : sessionToRecord.id\n                });\n                if (!sessionToRecord) {\n                    console.log(\"🎤 [useAppStateNew] 建立新的錄音 session\");\n                    const newSession = await session.createRecordingSession(title, appData.editorContent);\n                    if (!newSession) {\n                        throw new Error('無法建立新的錄音會話');\n                    }\n                    sessionToRecord = newSession;\n                    dispatch({\n                        type: 'SET_SESSION',\n                        payload: newSession\n                    });\n                    localStorage.removeItem('draft_note');\n                } else if (sessionToRecord.type === 'note_only') {\n                    console.log(\"🎤 [useAppStateNew] 升級 note_only session\");\n                    const upgradedSession = await session.upgradeToRecording();\n                    if (!upgradedSession) {\n                        throw new Error('無法升級會話');\n                    }\n                    sessionToRecord = upgradedSession;\n                    dispatch({\n                        type: 'SET_SESSION',\n                        payload: upgradedSession\n                    });\n                }\n                // 更新狀態機上下文，確保 session 資訊是最新的\n                stateMachineManager.getStateMachine().updateContext({\n                    currentState: appData.state,\n                    isRecording: appData.isRecording,\n                    transcriptCount: appData.transcriptEntries.length,\n                    session: sessionToRecord,\n                    error: error\n                });\n                // 觸發狀態轉換 - 讓狀態機處理錄音和 WebSocket 連接\n                const result = transition('USER_START_RECORDING');\n                if (!(result === null || result === void 0 ? void 0 : result.success)) {\n                    throw new Error((result === null || result === void 0 ? void 0 : result.error) || '狀態轉換失敗');\n                }\n                console.log(\"🎤 [useAppStateNew] 錄音開始成功\");\n                toast({\n                    title: '錄音開始'\n                });\n            } catch (err) {\n                // 處理會話衝突錯誤\n                if (err instanceof Error && err.message.includes('檢測到活躍會話衝突')) {\n                    const conflictMsg = '偵測到會話衝突，請重新整理頁面後再試';\n                    dispatch({\n                        type: 'SET_ERROR',\n                        payload: conflictMsg\n                    });\n                    toast({\n                        title: '會話衝突',\n                        description: '目前已有活躍會話，請重新整理頁面後再試，或等待當前會話結束',\n                        variant: 'destructive'\n                    });\n                    return;\n                }\n                const msg = err instanceof Error ? err.message : '開始錄音失敗';\n                dispatch({\n                    type: 'SET_ERROR',\n                    payload: msg\n                });\n                console.error(\"🎤 [useAppStateNew] 錄音失敗:\", msg);\n                toast({\n                    title: '錄音失敗',\n                    description: msg,\n                    variant: 'destructive'\n                });\n            } finally{\n                dispatch({\n                    type: 'SET_LOADING',\n                    payload: false\n                });\n            }\n        }\n    }[\"useAppStateNew.useCallback[startRecording]\"], [\n        session,\n        recording,\n        toast,\n        dispatch,\n        appData.editorContent,\n        transition,\n        stateMachineManager,\n        appData.state,\n        appData.isRecording,\n        appData.transcriptEntries,\n        error\n    ]);\n    // 升級會話為錄音模式\n    const upgradeToRecording = (0,react__WEBPACK_IMPORTED_MODULE_0__.useCallback)({\n        \"useAppStateNew.useCallback[upgradeToRecording]\": async ()=>{\n            dispatch({\n                type: 'SET_LOADING',\n                payload: true\n            });\n            dispatch({\n                type: 'CLEAR_ERROR'\n            });\n            try {\n                const updatedSession = await session.upgradeToRecording();\n                if (updatedSession) {\n                    dispatch({\n                        type: 'SET_SESSION',\n                        payload: updatedSession\n                    });\n                    console.log('✅ [useAppStateNew] 會話升級為錄音模式成功');\n                    toast({\n                        title: '升級成功',\n                        description: '會話已升級為錄音模式'\n                    });\n                }\n            } catch (err) {\n                const errorMessage = err instanceof Error ? err.message : '升級會話失敗';\n                dispatch({\n                    type: 'SET_ERROR',\n                    payload: errorMessage\n                });\n                console.error('❌ [useAppStateNew] 升級會話失敗:', err);\n                toast({\n                    title: '升級失敗',\n                    description: errorMessage,\n                    variant: 'destructive'\n                });\n            } finally{\n                dispatch({\n                    type: 'SET_LOADING',\n                    payload: false\n                });\n            }\n        }\n    }[\"useAppStateNew.useCallback[upgradeToRecording]\"], [\n        session,\n        toast,\n        dispatch\n    ]);\n    // 停止錄音\n    const stopRecording = (0,react__WEBPACK_IMPORTED_MODULE_0__.useCallback)({\n        \"useAppStateNew.useCallback[stopRecording]\": async ()=>{\n            dispatch({\n                type: 'SET_LOADING',\n                payload: true\n            });\n            dispatch({\n                type: 'CLEAR_ERROR'\n            });\n            try {\n                await recording.stopRecording();\n                transcript.disconnect();\n                // 觸發狀態轉換\n                transition('USER_STOP_RECORDING');\n                console.log('✅ [useAppStateNew] 錄音停止，開始處理逐字稿');\n                toast({\n                    title: '處理中',\n                    description: '正在處理錄音內容，請稍候...'\n                });\n            } catch (err) {\n                const errorMessage = err instanceof Error ? err.message : '停止錄音失敗';\n                dispatch({\n                    type: 'SET_ERROR',\n                    payload: errorMessage\n                });\n                console.error('❌ [useAppStateNew] 停止錄音失敗:', err);\n                toast({\n                    title: '停止失敗',\n                    description: errorMessage,\n                    variant: 'destructive'\n                });\n            } finally{\n                dispatch({\n                    type: 'SET_LOADING',\n                    payload: false\n                });\n            }\n        }\n    }[\"useAppStateNew.useCallback[stopRecording]\"], [\n        recording,\n        transcript,\n        toast,\n        dispatch,\n        transition\n    ]);\n    // 完成會話\n    const finishSession = (0,react__WEBPACK_IMPORTED_MODULE_0__.useCallback)({\n        \"useAppStateNew.useCallback[finishSession]\": async ()=>{\n            dispatch({\n                type: 'SET_LOADING',\n                payload: true\n            });\n            dispatch({\n                type: 'CLEAR_ERROR'\n            });\n            try {\n                await session.finishSession();\n                // 在這裡不需要觸發狀態轉換，因為 stopRecording 已經處理了\n                // dispatch({ type: 'SET_APP_STATE', payload: 'finished' })\n                console.log('✅ [useAppStateNew] 會話完成');\n                toast({\n                    title: '會話完成',\n                    description: '您可以匯出筆記或開始新的筆記'\n                });\n            } catch (err) {\n                const errorMessage = err instanceof Error ? err.message : '完成會話失敗';\n                dispatch({\n                    type: 'SET_ERROR',\n                    payload: errorMessage\n                });\n                console.error('❌ [useAppStateNew] 完成會話失敗:', err);\n                toast({\n                    title: '完成失敗',\n                    description: errorMessage,\n                    variant: 'destructive'\n                });\n            } finally{\n                dispatch({\n                    type: 'SET_LOADING',\n                    payload: false\n                });\n            }\n        }\n    }[\"useAppStateNew.useCallback[finishSession]\"], [\n        session,\n        toast,\n        dispatch\n    ]);\n    // 開新筆記\n    const newNote = (0,react__WEBPACK_IMPORTED_MODULE_0__.useCallback)({\n        \"useAppStateNew.useCallback[newNote]\": async ()=>{\n            dispatch({\n                type: 'SET_LOADING',\n                payload: true\n            });\n            dispatch({\n                type: 'CLEAR_ERROR'\n            });\n            try {\n                // 如果有活躍會話，先刪除它\n                if (session.currentSession) {\n                    console.log('🗑️ [useAppStateNew] 刪除當前活躍會話:', session.currentSession.id);\n                    await session.deleteSession();\n                }\n                // 觸發狀態轉換\n                transition('USER_NEW_NOTE');\n                // 重置所有狀態\n                dispatch({\n                    type: 'RESET_STATE'\n                });\n                // 清除相關狀態\n                recording.clearTranscripts();\n                transcript.clearTranscripts();\n                notes.clearNote();\n                // 清除本地草稿\n                localStorage.removeItem('draft_note');\n                console.log('🔄 [useAppStateNew] 已開始新筆記');\n                toast({\n                    title: '新筆記',\n                    description: '已清空內容，可以開始新的筆記'\n                });\n            } catch (err) {\n                const errorMessage = err instanceof Error ? err.message : '開始新筆記失敗';\n                dispatch({\n                    type: 'SET_ERROR',\n                    payload: errorMessage\n                });\n                console.error('❌ [useAppStateNew] 開始新筆記失敗:', err);\n                toast({\n                    title: '操作失敗',\n                    description: errorMessage,\n                    variant: 'destructive'\n                });\n            } finally{\n                dispatch({\n                    type: 'SET_LOADING',\n                    payload: false\n                });\n            }\n        }\n    }[\"useAppStateNew.useCallback[newNote]\"], [\n        session,\n        recording,\n        transcript,\n        notes,\n        toast,\n        dispatch,\n        transition\n    ]);\n    // 自動儲存筆記內容到本地草稿\n    const saveLocalDraft = (0,react__WEBPACK_IMPORTED_MODULE_0__.useCallback)({\n        \"useAppStateNew.useCallback[saveLocalDraft]\": (content)=>{\n            if (!session.currentSession && content.trim()) {\n                localStorage.setItem('draft_note', content);\n            }\n            dispatch({\n                type: 'SET_EDITOR_CONTENT',\n                payload: content\n            });\n        }\n    }[\"useAppStateNew.useCallback[saveLocalDraft]\"], [\n        session.currentSession,\n        dispatch\n    ]);\n    // 使用 useCallback 來記憶函數\n    const createRecordingSessionCallback = (0,react__WEBPACK_IMPORTED_MODULE_0__.useCallback)(createRecordingSession, [\n        session,\n        notes,\n        toast,\n        dispatch,\n        appData.editorContent\n    ]);\n    const startRecordingCallback = (0,react__WEBPACK_IMPORTED_MODULE_0__.useCallback)(startRecording, [\n        session,\n        recording,\n        toast,\n        dispatch,\n        appData.editorContent,\n        transition\n    ]);\n    const stopRecordingCallback = (0,react__WEBPACK_IMPORTED_MODULE_0__.useCallback)(stopRecording, [\n        recording,\n        transcript,\n        toast,\n        dispatch,\n        transition\n    ]);\n    const finishSessionCallback = (0,react__WEBPACK_IMPORTED_MODULE_0__.useCallback)(finishSession, [\n        session,\n        toast,\n        dispatch\n    ]);\n    const connectTranscriptCallback = (0,react__WEBPACK_IMPORTED_MODULE_0__.useCallback)(transcript.connect, [\n        transcript\n    ]);\n    const disconnectTranscriptCallback = (0,react__WEBPACK_IMPORTED_MODULE_0__.useCallback)(transcript.disconnect, [\n        transcript\n    ]);\n    return {\n        // 應用狀態（向後相容）\n        appData,\n        isLoading,\n        error,\n        // 會話管理\n        createNoteSession,\n        createRecordingSession,\n        upgradeToRecording,\n        finishSession,\n        newNote,\n        // 錄音控制\n        startRecording,\n        stopRecording,\n        // 本地草稿\n        saveLocalDraft,\n        // 外部狀態（向後相容）\n        session: session.currentSession,\n        sessionLoading: session.isLoading,\n        sessionError: session.error,\n        // 錄音狀態\n        recordingError: recording.error,\n        // 逐字稿狀態\n        transcriptConnected: transcript.isConnected,\n        transcriptError: transcript.error,\n        transcriptAutoScroll: transcript.autoScrollEnabled,\n        enableAutoScroll: transcript.enableAutoScroll,\n        disableAutoScroll: transcript.disableAutoScroll,\n        scrollToLatest: transcript.scrollToLatest\n    };\n}\n\n\n;\n    // Wrapped in an IIFE to avoid polluting the global scope\n    ;\n    (function () {\n        var _a, _b;\n        // Legacy CSS implementations will `eval` browser code in a Node.js context\n        // to extract CSS. For backwards compatibility, we need to check we're in a\n        // browser context before continuing.\n        if (typeof self !== 'undefined' &&\n            // AMP / No-JS mode does not inject these helpers:\n            '$RefreshHelpers$' in self) {\n            // @ts-ignore __webpack_module__ is global\n            var currentExports = module.exports;\n            // @ts-ignore __webpack_module__ is global\n            var prevSignature = (_b = (_a = module.hot.data) === null || _a === void 0 ? void 0 : _a.prevSignature) !== null && _b !== void 0 ? _b : null;\n            // This cannot happen in MainTemplate because the exports mismatch between\n            // templating and execution.\n            self.$RefreshHelpers$.registerExportsForReactRefresh(currentExports, module.id);\n            // A module can be accepted automatically based on its exports, e.g. when\n            // it is a Refresh Boundary.\n            if (self.$RefreshHelpers$.isReactRefreshBoundary(currentExports)) {\n                // Save the previous exports signature on update so we can compare the boundary\n                // signatures. We avoid saving exports themselves since it causes memory leaks (https://github.com/vercel/next.js/pull/53797)\n                module.hot.dispose(function (data) {\n                    data.prevSignature =\n                        self.$RefreshHelpers$.getRefreshBoundarySignature(currentExports);\n                });\n                // Unconditionally accept an update to this module, we'll check if it's\n                // still a Refresh Boundary later.\n                // @ts-ignore importMeta is replaced in the loader\n                module.hot.accept();\n                // This field is set when the previous version of this module was a\n                // Refresh Boundary, letting us know we need to check for invalidation or\n                // enqueue an update.\n                if (prevSignature !== null) {\n                    // A boundary can become ineligible if its exports are incompatible\n                    // with the previous exports.\n                    //\n                    // For example, if you add/remove/change exports, we'll want to\n                    // re-execute the importing modules, and force those components to\n                    // re-render. Similarly, if you convert a class component to a\n                    // function, we want to invalidate the boundary.\n                    if (self.$RefreshHelpers$.shouldInvalidateReactRefreshBoundary(prevSignature, self.$RefreshHelpers$.getRefreshBoundarySignature(currentExports))) {\n                        module.hot.invalidate();\n                    }\n                    else {\n                        self.$RefreshHelpers$.scheduleUpdate();\n                    }\n                }\n            }\n            else {\n                // Since we just executed the code for the module, it's possible that the\n                // new exports made it ineligible for being a boundary.\n                // We only care about the case when we were _previously_ a boundary,\n                // because we already accepted this update (accidental side effect).\n                var isNoLongerABoundary = prevSignature !== null;\n                if (isNoLongerABoundary) {\n                    module.hot.invalidate();\n                }\n            }\n        }\n    })();\n//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,\n//# sourceURL=webpack-internal:///(app-pages-browser)/./hooks/use-app-state-new.ts\n"));

/***/ }),

/***/ "(app-pages-browser)/./types/state-transitions.ts":
/*!************************************!*\
  !*** ./types/state-transitions.ts ***!
  \************************************/
/***/ ((module, __webpack_exports__, __webpack_require__) => {

eval(__webpack_require__.ts("__webpack_require__.r(__webpack_exports__);\n/* harmony export */ __webpack_require__.d(__webpack_exports__, {\n/* harmony export */   STATE_TRANSITION_RULES: () => (/* binding */ STATE_TRANSITION_RULES),\n/* harmony export */   STATE_TRANSITION_SIDE_EFFECTS: () => (/* binding */ STATE_TRANSITION_SIDE_EFFECTS)\n/* harmony export */ });\n// 狀態轉換規則定義\nconst STATE_TRANSITION_RULES = [\n    // 從 default 狀態開始錄音\n    {\n        currentState: \"default\",\n        targetState: \"recording_waiting\",\n        trigger: \"USER_START_RECORDING\",\n        customValidator: (context)=>{\n            // 確保沒有其他活躍的錄音 session\n            return !context.session || context.session.status === \"completed\" || context.session.status === \"error\";\n        }\n    },\n    // Session 建立完成後保持在 default 狀態\n    {\n        currentState: \"default\",\n        targetState: \"default\",\n        trigger: \"SESSION_CREATED\",\n        sessionExists: true,\n        sessionStatus: \"draft\"\n    },\n    // 從 recording_waiting 收到第一個逐字稿轉為 recording_active\n    {\n        currentState: \"recording_waiting\",\n        targetState: \"recording_active\",\n        trigger: \"FIRST_TRANSCRIPT_RECEIVED\",\n        sessionExists: true,\n        sessionStatus: \"active\",\n        sessionType: \"recording\",\n        isRecording: true,\n        hasTranscripts: true\n    },\n    // 從 recording_waiting 或 recording_active 停止錄音轉為 processing\n    {\n        currentState: \"recording_waiting\",\n        targetState: \"processing\",\n        trigger: \"USER_STOP_RECORDING\",\n        sessionExists: true,\n        sessionType: \"recording\"\n    },\n    {\n        currentState: \"recording_active\",\n        targetState: \"processing\",\n        trigger: \"USER_STOP_RECORDING\",\n        sessionExists: true,\n        sessionType: \"recording\"\n    },\n    // 從 processing 完成轉錄轉為 finished\n    {\n        currentState: \"processing\",\n        targetState: \"finished\",\n        trigger: \"PROCESSING_COMPLETED\",\n        sessionExists: true,\n        sessionStatus: \"completed\"\n    },\n    // 從任何狀態發生錯誤回到 default\n    {\n        currentState: \"recording_waiting\",\n        targetState: \"default\",\n        trigger: \"ERROR_OCCURRED\"\n    },\n    {\n        currentState: \"recording_active\",\n        targetState: \"default\",\n        trigger: \"ERROR_OCCURRED\"\n    },\n    {\n        currentState: \"processing\",\n        targetState: \"default\",\n        trigger: \"ERROR_OCCURRED\"\n    },\n    // 從 finished 或任何狀態開新筆記回到 default\n    {\n        currentState: \"finished\",\n        targetState: \"default\",\n        trigger: \"USER_NEW_NOTE\"\n    },\n    {\n        currentState: \"recording_waiting\",\n        targetState: \"default\",\n        trigger: \"USER_NEW_NOTE\"\n    },\n    {\n        currentState: \"recording_active\",\n        targetState: \"default\",\n        trigger: \"USER_NEW_NOTE\"\n    }\n];\n// 狀態轉換副作用映射\nconst STATE_TRANSITION_SIDE_EFFECTS = {\n    // default -> recording_waiting: 開始錄音並連接 WebSocket\n    \"default->recording_waiting->USER_START_RECORDING\": [\n        {\n            type: \"START_RECORDING\"\n        },\n        {\n            type: \"CONNECT_WEBSOCKET\"\n        }\n    ],\n    // recording_waiting/recording_active -> processing: 停止錄音\n    \"recording_waiting->processing->USER_STOP_RECORDING\": [\n        {\n            type: \"STOP_RECORDING\"\n        }\n    ],\n    \"recording_active->processing->USER_STOP_RECORDING\": [\n        {\n            type: \"STOP_RECORDING\"\n        }\n    ],\n    // processing -> finished: 完成 session\n    \"processing->finished->PROCESSING_COMPLETED\": [\n        {\n            type: \"FINISH_SESSION\"\n        }\n    ],\n    // 任何狀態 -> default (新筆記): 清理狀態\n    \"finished->default->USER_NEW_NOTE\": [\n        {\n            type: \"CLEAR_TRANSCRIPTS\"\n        },\n        {\n            type: \"SAVE_DRAFT\"\n        }\n    ],\n    \"recording_waiting->default->USER_NEW_NOTE\": [\n        {\n            type: \"STOP_RECORDING\"\n        },\n        {\n            type: \"DISCONNECT_WEBSOCKET\"\n        },\n        {\n            type: \"CLEAR_TRANSCRIPTS\"\n        }\n    ],\n    \"recording_active->default->USER_NEW_NOTE\": [\n        {\n            type: \"STOP_RECORDING\"\n        },\n        {\n            type: \"DISCONNECT_WEBSOCKET\"\n        },\n        {\n            type: \"CLEAR_TRANSCRIPTS\"\n        }\n    ],\n    // 錯誤處理\n    \"recording_waiting->default->ERROR_OCCURRED\": [\n        {\n            type: \"STOP_RECORDING\"\n        },\n        {\n            type: \"DISCONNECT_WEBSOCKET\"\n        },\n        {\n            type: \"SHOW_ERROR\",\n            message: \"錄音過程中發生錯誤\"\n        }\n    ],\n    \"recording_active->default->ERROR_OCCURRED\": [\n        {\n            type: \"STOP_RECORDING\"\n        },\n        {\n            type: \"DISCONNECT_WEBSOCKET\"\n        },\n        {\n            type: \"SHOW_ERROR\",\n            message: \"錄音過程中發生錯誤\"\n        }\n    ],\n    \"processing->default->ERROR_OCCURRED\": [\n        {\n            type: \"SHOW_ERROR\",\n            message: \"處理轉錄時發生錯誤\"\n        }\n    ]\n};\n\n\n;\n    // Wrapped in an IIFE to avoid polluting the global scope\n    ;\n    (function () {\n        var _a, _b;\n        // Legacy CSS implementations will `eval` browser code in a Node.js context\n        // to extract CSS. For backwards compatibility, we need to check we're in a\n        // browser context before continuing.\n        if (typeof self !== 'undefined' &&\n            // AMP / No-JS mode does not inject these helpers:\n            '$RefreshHelpers$' in self) {\n            // @ts-ignore __webpack_module__ is global\n            var currentExports = module.exports;\n            // @ts-ignore __webpack_module__ is global\n            var prevSignature = (_b = (_a = module.hot.data) === null || _a === void 0 ? void 0 : _a.prevSignature) !== null && _b !== void 0 ? _b : null;\n            // This cannot happen in MainTemplate because the exports mismatch between\n            // templating and execution.\n            self.$RefreshHelpers$.registerExportsForReactRefresh(currentExports, module.id);\n            // A module can be accepted automatically based on its exports, e.g. when\n            // it is a Refresh Boundary.\n            if (self.$RefreshHelpers$.isReactRefreshBoundary(currentExports)) {\n                // Save the previous exports signature on update so we can compare the boundary\n                // signatures. We avoid saving exports themselves since it causes memory leaks (https://github.com/vercel/next.js/pull/53797)\n                module.hot.dispose(function (data) {\n                    data.prevSignature =\n                        self.$RefreshHelpers$.getRefreshBoundarySignature(currentExports);\n                });\n                // Unconditionally accept an update to this module, we'll check if it's\n                // still a Refresh Boundary later.\n                // @ts-ignore importMeta is replaced in the loader\n                module.hot.accept();\n                // This field is set when the previous version of this module was a\n                // Refresh Boundary, letting us know we need to check for invalidation or\n                // enqueue an update.\n                if (prevSignature !== null) {\n                    // A boundary can become ineligible if its exports are incompatible\n                    // with the previous exports.\n                    //\n                    // For example, if you add/remove/change exports, we'll want to\n                    // re-execute the importing modules, and force those components to\n                    // re-render. Similarly, if you convert a class component to a\n                    // function, we want to invalidate the boundary.\n                    if (self.$RefreshHelpers$.shouldInvalidateReactRefreshBoundary(prevSignature, self.$RefreshHelpers$.getRefreshBoundarySignature(currentExports))) {\n                        module.hot.invalidate();\n                    }\n                    else {\n                        self.$RefreshHelpers$.scheduleUpdate();\n                    }\n                }\n            }\n            else {\n                // Since we just executed the code for the module, it's possible that the\n                // new exports made it ineligible for being a boundary.\n                // We only care about the case when we were _previously_ a boundary,\n                // because we already accepted this update (accidental side effect).\n                var isNoLongerABoundary = prevSignature !== null;\n                if (isNoLongerABoundary) {\n                    module.hot.invalidate();\n                }\n            }\n        }\n    })();\n//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,\n//# sourceURL=webpack-internal:///(app-pages-browser)/./types/state-transitions.ts\n"));

/***/ })

});
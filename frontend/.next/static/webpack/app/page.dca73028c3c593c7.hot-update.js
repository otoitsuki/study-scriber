"use strict";
/*
 * ATTENTION: An "eval-source-map" devtool has been used.
 * This devtool is neither made for production nor for readable output files.
 * It uses "eval()" calls to create a separate source file with attached SourceMaps in the browser devtools.
 * If you are trying to read the output file, select a different devtool (https://webpack.js.org/configuration/devtool/)
 * or disable the default devtool with "devtool: false".
 * If you are looking for production-ready output files, see mode: "production" (https://webpack.js.org/configuration/mode/).
 */
self["webpackHotUpdate_N_E"]("app/page",{

/***/ "(app-pages-browser)/./hooks/use-app-state.ts":
/*!********************************!*\
  !*** ./hooks/use-app-state.ts ***!
  \********************************/
/***/ ((module, __webpack_exports__, __webpack_require__) => {

eval(__webpack_require__.ts("__webpack_require__.r(__webpack_exports__);\n/* harmony export */ __webpack_require__.d(__webpack_exports__, {\n/* harmony export */   mapBackendToFrontendState: () => (/* binding */ mapBackendToFrontendState),\n/* harmony export */   useAppState: () => (/* binding */ useAppState)\n/* harmony export */ });\n/* harmony import */ var react__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! react */ \"(app-pages-browser)/./node_modules/.pnpm/next@15.2.4_@babel+core@7.27.4_@playwright+test@1.53.1_react-dom@19.0.0_react@19.0.0__react@19.0.0/node_modules/next/dist/compiled/react/index.js\");\n/* harmony import */ var react__WEBPACK_IMPORTED_MODULE_0___default = /*#__PURE__*/__webpack_require__.n(react__WEBPACK_IMPORTED_MODULE_0__);\n/* harmony import */ var _use_session__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! ./use-session */ \"(app-pages-browser)/./hooks/use-session.ts\");\n/* harmony import */ var _use_recording__WEBPACK_IMPORTED_MODULE_2__ = __webpack_require__(/*! ./use-recording */ \"(app-pages-browser)/./hooks/use-recording.ts\");\n/* harmony import */ var _use_notes__WEBPACK_IMPORTED_MODULE_3__ = __webpack_require__(/*! ./use-notes */ \"(app-pages-browser)/./hooks/use-notes.ts\");\n/* harmony import */ var _use_transcript__WEBPACK_IMPORTED_MODULE_4__ = __webpack_require__(/*! ./use-transcript */ \"(app-pages-browser)/./hooks/use-transcript.ts\");\n/* harmony import */ var _components_ui_use_toast__WEBPACK_IMPORTED_MODULE_5__ = __webpack_require__(/*! @/components/ui/use-toast */ \"(app-pages-browser)/./components/ui/use-toast.ts\");\n/* __next_internal_client_entry_do_not_use__ useAppState,mapBackendToFrontendState auto */ \n\n\n\n\n\n// 前後端狀態映射規則\nconst mapBackendToFrontendState = (status, type, isRecording, transcriptsPresent)=>{\n    console.log('🔄 [狀態映射] 輸入參數:', {\n        status,\n        type,\n        isRecording,\n        transcriptsPresent,\n        timestamp: new Date().toISOString()\n    });\n    let resultState;\n    switch(status){\n        case \"draft\":\n            resultState = \"default\";\n            break;\n        case \"active\":\n            if (type === \"recording\") {\n                if (!isRecording) {\n                    resultState = \"default\";\n                    console.log('🔄 [狀態映射] recording session 但 isRecording=false，回到 default');\n                } else {\n                    resultState = transcriptsPresent ? \"recording_active\" : \"recording_waiting\";\n                    console.log(\"\\uD83D\\uDD04 [狀態映射] recording session + isRecording=true，transcriptsPresent=\".concat(transcriptsPresent, \" → \").concat(resultState));\n                }\n            } else {\n                resultState = \"default\";\n            }\n            break;\n        case \"processing\":\n            resultState = \"processing\";\n            break;\n        case \"completed\":\n            resultState = \"finished\";\n            break;\n        case \"error\":\n            resultState = \"default\" // 錯誤時回到預設狀態\n            ;\n            break;\n        default:\n            resultState = \"default\";\n            break;\n    }\n    console.log(\"\\uD83D\\uDD04 [狀態映射] 最終結果: \".concat(status, \"(\").concat(type, \") → \").concat(resultState));\n    return resultState;\n};\nfunction useAppState() {\n    const [appData, setAppData] = (0,react__WEBPACK_IMPORTED_MODULE_0__.useState)({\n        state: \"default\",\n        transcriptEntries: [],\n        editorContent: \"\",\n        isRecording: false,\n        recordingTime: 0\n    });\n    const [isLoading, setIsLoading] = (0,react__WEBPACK_IMPORTED_MODULE_0__.useState)(false);\n    const [error, setError] = (0,react__WEBPACK_IMPORTED_MODULE_0__.useState)(null);\n    // 使用各個專門的 hooks\n    const session = (0,_use_session__WEBPACK_IMPORTED_MODULE_1__.useSession)();\n    const recording = (0,_use_recording__WEBPACK_IMPORTED_MODULE_2__.useRecording)();\n    const notes = (0,_use_notes__WEBPACK_IMPORTED_MODULE_3__.useNotes)();\n    const transcript = (0,_use_transcript__WEBPACK_IMPORTED_MODULE_4__.useTranscript)();\n    const { toast } = (0,_components_ui_use_toast__WEBPACK_IMPORTED_MODULE_5__.useToast)();\n    // 狀態同步：前端狀態與後端 session status 對應\n    (0,react__WEBPACK_IMPORTED_MODULE_0__.useEffect)({\n        \"useAppState.useEffect\": ()=>{\n            const activeSession = session.currentSession;\n            console.log('🔄 [狀態同步] useEffect 觸發:', {\n                hasActiveSession: !!activeSession,\n                sessionId: activeSession === null || activeSession === void 0 ? void 0 : activeSession.id,\n                sessionStatus: activeSession === null || activeSession === void 0 ? void 0 : activeSession.status,\n                sessionType: activeSession === null || activeSession === void 0 ? void 0 : activeSession.type,\n                isRecording: recording.isRecording,\n                transcriptCount: transcript.transcripts.length,\n                recordingTranscriptCount: recording.transcripts.length,\n                currentAppState: appData.state\n            });\n            if (activeSession) {\n                // 統一使用 recording.transcripts，避免雙重逐字稿管理\n                const transcriptsPresent = recording.transcripts.length > 0;\n                console.log('🔄 [狀態同步] 計算 transcriptsPresent (統一路徑):', {\n                    recordingTranscriptCount: recording.transcripts.length,\n                    transcriptsPresent,\n                    note: '已移除 transcript.transcripts 避免雙重管理'\n                });\n                const frontendState = mapBackendToFrontendState(activeSession.status, activeSession.type, recording.isRecording, transcriptsPresent);\n                console.log(\"\\uD83D\\uDD04 [狀態同步] 狀態變化: \".concat(appData.state, \" → \").concat(frontendState));\n                setAppData({\n                    \"useAppState.useEffect\": (prev)=>({\n                            ...prev,\n                            state: frontendState\n                        })\n                }[\"useAppState.useEffect\"]);\n            }\n        }\n    }[\"useAppState.useEffect\"], [\n        session.currentSession,\n        recording.isRecording,\n        recording.transcripts.length,\n        appData.state\n    ]);\n    // 初始化應用狀態 - 只在組件掛載時執行一次\n    (0,react__WEBPACK_IMPORTED_MODULE_0__.useEffect)({\n        \"useAppState.useEffect\": ()=>{\n            let isMounted = true;\n            const initializeApp = {\n                \"useAppState.useEffect.initializeApp\": async ()=>{\n                    console.log('🚀 初始化應用狀態...');\n                    setIsLoading(true);\n                    try {\n                        // 檢查是否有活躍會話\n                        const activeSession = await session.checkActiveSession();\n                        if (!isMounted) return; // 組件已卸載，停止執行\n                        if (activeSession) {\n                            // 載入筆記內容\n                            await notes.loadNote(activeSession.id);\n                        } else {\n                            // 檢查是否有本地草稿\n                            const draftContent = localStorage.getItem('draft_note');\n                            if (draftContent) {\n                                setAppData({\n                                    \"useAppState.useEffect.initializeApp\": (prev)=>({\n                                            ...prev,\n                                            editorContent: draftContent\n                                        })\n                                }[\"useAppState.useEffect.initializeApp\"]);\n                                console.log('📝 載入本地草稿');\n                            }\n                        }\n                    } catch (error) {\n                        if (!isMounted) return; // 組件已卸載，停止執行\n                        console.error('❌ 初始化失敗:', error);\n                        setError(error instanceof Error ? error.message : '初始化失敗');\n                    } finally{\n                        if (isMounted) {\n                            setIsLoading(false);\n                        }\n                    }\n                }\n            }[\"useAppState.useEffect.initializeApp\"];\n            initializeApp();\n            return ({\n                \"useAppState.useEffect\": ()=>{\n                    isMounted = false;\n                }\n            })[\"useAppState.useEffect\"];\n        }\n    }[\"useAppState.useEffect\"], []) // 空依賴項，只在組件掛載時執行一次\n    ;\n    // 同步錄音狀態\n    (0,react__WEBPACK_IMPORTED_MODULE_0__.useEffect)({\n        \"useAppState.useEffect\": ()=>{\n            setAppData({\n                \"useAppState.useEffect\": (prev)=>({\n                        ...prev,\n                        isRecording: recording.isRecording,\n                        recordingTime: recording.recordingTime\n                    })\n            }[\"useAppState.useEffect\"]);\n        }\n    }[\"useAppState.useEffect\"], [\n        recording.isRecording,\n        recording.recordingTime\n    ]);\n    // 同步筆記內容\n    (0,react__WEBPACK_IMPORTED_MODULE_0__.useEffect)({\n        \"useAppState.useEffect\": ()=>{\n            setAppData({\n                \"useAppState.useEffect\": (prev)=>({\n                        ...prev,\n                        editorContent: notes.noteContent\n                    })\n            }[\"useAppState.useEffect\"]);\n        }\n    }[\"useAppState.useEffect\"], [\n        notes.noteContent\n    ]);\n    // 處理逐字稿更新 - 統一使用 recording.transcripts\n    (0,react__WEBPACK_IMPORTED_MODULE_0__.useEffect)({\n        \"useAppState.useEffect\": ()=>{\n            var _transcriptEntries__text, _transcriptEntries_;\n            console.log('📝 [逐字稿更新] useEffect 觸發:', {\n                recordingTranscriptCount: recording.transcripts.length,\n                note: '統一使用 recording.transcripts，避免雙重管理'\n            });\n            const transcriptEntries = recording.transcripts.map({\n                \"useAppState.useEffect.transcriptEntries\": (transcriptMsg)=>{\n                    var _transcriptMsg_start_time;\n                    // 使用 start_time 或 timestamp 計算時間\n                    const startTime = (_transcriptMsg_start_time = transcriptMsg.start_time) !== null && _transcriptMsg_start_time !== void 0 ? _transcriptMsg_start_time : 0;\n                    const minutes = Math.floor(startTime / 60);\n                    const seconds = Math.floor(startTime % 60);\n                    const timeStr = \"\".concat(minutes.toString().padStart(2, \"0\"), \":\").concat(seconds.toString().padStart(2, \"0\"));\n                    var _transcriptMsg_text;\n                    return {\n                        time: timeStr,\n                        text: (_transcriptMsg_text = transcriptMsg.text) !== null && _transcriptMsg_text !== void 0 ? _transcriptMsg_text : ''\n                    };\n                }\n            }[\"useAppState.useEffect.transcriptEntries\"]);\n            console.log('📝 [逐字稿更新] 轉換完成:', {\n                entriesCount: transcriptEntries.length,\n                firstEntry: ((_transcriptEntries_ = transcriptEntries[0]) === null || _transcriptEntries_ === void 0 ? void 0 : (_transcriptEntries__text = _transcriptEntries_.text) === null || _transcriptEntries__text === void 0 ? void 0 : _transcriptEntries__text.substring(0, 30)) + '...'\n            });\n            setAppData({\n                \"useAppState.useEffect\": (prev)=>({\n                        ...prev,\n                        transcriptEntries\n                    })\n            }[\"useAppState.useEffect\"]);\n        }\n    }[\"useAppState.useEffect\"], [\n        recording.transcripts\n    ]);\n    // 監聽轉錄完成，自動轉為 finished 狀態\n    (0,react__WEBPACK_IMPORTED_MODULE_0__.useEffect)({\n        \"useAppState.useEffect\": ()=>{\n            if (transcript.isCompleted && appData.state === \"processing\") {\n                setAppData({\n                    \"useAppState.useEffect\": (prev)=>({\n                            ...prev,\n                            state: \"finished\"\n                        })\n                }[\"useAppState.useEffect\"]);\n                // 完成會話\n                if (session.currentSession) {\n                    session.finishSession().catch(console.error);\n                }\n            }\n        }\n    }[\"useAppState.useEffect\"], [\n        transcript.isCompleted,\n        appData.state,\n        session.currentSession,\n        session.finishSession\n    ]);\n    // 建立純筆記會話\n    const createNoteSession = (0,react__WEBPACK_IMPORTED_MODULE_0__.useCallback)({\n        \"useAppState.useCallback[createNoteSession]\": async (title)=>{\n            setIsLoading(true);\n            setError(null);\n            try {\n                const newSession = await session.createNoteSession(title);\n                if (newSession) {\n                    // 載入筆記內容\n                    await notes.loadNote(newSession.id);\n                    // 清除本地草稿\n                    localStorage.removeItem('draft_note');\n                    console.log('✅ 純筆記會話建立成功');\n                    toast({\n                        title: '筆記會話已建立',\n                        description: '會話 \"'.concat(title, '\" 建立成功')\n                    });\n                }\n            } catch (err) {\n                const errorMessage = err instanceof Error ? err.message : '建立純筆記會話失敗';\n                setError(errorMessage);\n                console.error('❌ 建立純筆記會話失敗:', err);\n                toast({\n                    title: '建立失敗',\n                    description: errorMessage,\n                    variant: 'destructive'\n                });\n            } finally{\n                setIsLoading(false);\n            }\n        }\n    }[\"useAppState.useCallback[createNoteSession]\"], [\n        session,\n        notes,\n        toast\n    ]);\n    // 建立錄音會話\n    const createRecordingSession = (0,react__WEBPACK_IMPORTED_MODULE_0__.useCallback)({\n        \"useAppState.useCallback[createRecordingSession]\": async (title)=>{\n            setIsLoading(true);\n            setError(null);\n            try {\n                const newSession = await session.createRecordingSession(title);\n                if (newSession) {\n                    // 載入筆記內容\n                    await notes.loadNote(newSession.id);\n                    // 清除本地草稿\n                    localStorage.removeItem('draft_note');\n                    console.log('✅ 錄音會話建立成功');\n                    toast({\n                        title: '錄音會話已建立',\n                        description: '會話 \"'.concat(title, '\" 建立成功')\n                    });\n                }\n            } catch (err) {\n                const errorMessage = err instanceof Error ? err.message : '建立錄音會話失敗';\n                setError(errorMessage);\n                console.error('❌ 建立錄音會話失敗:', err);\n                toast({\n                    title: '建立失敗',\n                    description: errorMessage,\n                    variant: 'destructive'\n                });\n            } finally{\n                setIsLoading(false);\n            }\n        }\n    }[\"useAppState.useCallback[createRecordingSession]\"], [\n        session,\n        notes,\n        toast\n    ]);\n    // 升級會話為錄音模式\n    const upgradeToRecording = (0,react__WEBPACK_IMPORTED_MODULE_0__.useCallback)({\n        \"useAppState.useCallback[upgradeToRecording]\": async ()=>{\n            setIsLoading(true);\n            setError(null);\n            try {\n                const updatedSession = await session.upgradeToRecording();\n                if (updatedSession) {\n                    console.log('✅ 會話升級為錄音模式成功');\n                    toast({\n                        title: '升級成功',\n                        description: '會話已升級為錄音模式'\n                    });\n                }\n            } catch (err) {\n                const errorMessage = err instanceof Error ? err.message : '升級會話失敗';\n                setError(errorMessage);\n                console.error('❌ 升級會話失敗:', err);\n                toast({\n                    title: '升級失敗',\n                    description: errorMessage,\n                    variant: 'destructive'\n                });\n            } finally{\n                setIsLoading(false);\n            }\n        }\n    }[\"useAppState.useCallback[upgradeToRecording]\"], [\n        session,\n        toast\n    ]);\n    // 開始錄音 - 支援四狀態流程\n    const startRecording = (0,react__WEBPACK_IMPORTED_MODULE_0__.useCallback)({\n        \"useAppState.useCallback[startRecording]\": async (title)=>{\n            console.log(\"🎤 startRecording: 流程開始\");\n            setIsLoading(true);\n            try {\n                let sessionToRecord = session.currentSession;\n                console.log(\"🎤 startRecording: 目前 session:\", sessionToRecord);\n                if (!sessionToRecord) {\n                    console.log(\"🎤 startRecording: 沒有 session，建立新的錄音 session\");\n                    const newSession = await session.createRecordingSession(title, appData.editorContent);\n                    if (!newSession) {\n                        console.error(\"🎤 startRecording: 建立 session 失敗，回傳值為 null\");\n                        throw new Error('無法建立新的錄音會話');\n                    }\n                    console.log(\"🎤 startRecording: Session 建立成功:\", newSession);\n                    sessionToRecord = newSession;\n                    localStorage.removeItem('draft_note');\n                } else if (sessionToRecord.type === 'note_only') {\n                    console.log(\"🎤 startRecording: 偵測到 note_only session，進行升級\");\n                    const upgradedSession = await session.upgradeToRecording();\n                    if (!upgradedSession) {\n                        console.error(\"🎤 startRecording: 升級 session 失敗，回傳值為 null\");\n                        throw new Error('無法升級會話');\n                    }\n                    console.log(\"🎤 startRecording: Session 升級成功:\", upgradedSession);\n                    sessionToRecord = upgradedSession;\n                }\n                console.log(\"🎤 startRecording: 準備呼叫 recording.startRecording\");\n                // recording.startRecording 使用 TranscriptManager，統一管理逐字稿連接\n                await recording.startRecording(sessionToRecord.id);\n                console.log(\"🎤 startRecording: recording.startRecording 呼叫完畢\");\n                console.log(\"🎤 startRecording: 跳過 transcript.connect，避免雙重監聽器\");\n                // 移除重複連接：useRecording 已經透過 TranscriptManager 連接逐字稿\n                // 避免 useTranscript 和 useRecording 同時添加監聽器導致競爭條件\n                console.log(\"🎤 startRecording: 逐字稿將由 useRecording hook 統一管理\");\n                toast({\n                    title: '錄音開始'\n                });\n            } catch (err) {\n                const msg = err instanceof Error ? err.message : '開始錄音失敗';\n                console.error(\"🎤 startRecording: 流程中發生錯誤:\", msg);\n                setError(msg);\n                toast({\n                    title: '錄音失敗',\n                    description: msg,\n                    variant: 'destructive'\n                });\n            } finally{\n                setIsLoading(false);\n                console.log(\"🎤 startRecording: 流程結束\");\n            }\n        }\n    }[\"useAppState.useCallback[startRecording]\"], [\n        session,\n        recording,\n        transcript,\n        appData.editorContent,\n        toast\n    ]);\n    // 停止錄音 - 自動轉為 processing 狀態\n    const stopRecording = (0,react__WEBPACK_IMPORTED_MODULE_0__.useCallback)({\n        \"useAppState.useCallback[stopRecording]\": async ()=>{\n            setIsLoading(true);\n            setError(null);\n            try {\n                await recording.stopRecording();\n                // 斷開 transcript 連接\n                transcript.disconnect();\n                // 狀態轉為 processing\n                setAppData({\n                    \"useAppState.useCallback[stopRecording]\": (prev)=>({\n                            ...prev,\n                            state: \"processing\"\n                        })\n                }[\"useAppState.useCallback[stopRecording]\"]);\n                console.log('✅ 錄音停止，開始處理逐字稿');\n                toast({\n                    title: '處理中',\n                    description: '正在處理錄音內容，請稍候...'\n                });\n            } catch (err) {\n                const errorMessage = err instanceof Error ? err.message : '停止錄音失敗';\n                setError(errorMessage);\n                console.error('❌ 停止錄音失敗:', err);\n                toast({\n                    title: '停止失敗',\n                    description: errorMessage,\n                    variant: 'destructive'\n                });\n            } finally{\n                setIsLoading(false);\n            }\n        }\n    }[\"useAppState.useCallback[stopRecording]\"], [\n        recording,\n        toast\n    ]);\n    // 完成會話\n    const finishSession = (0,react__WEBPACK_IMPORTED_MODULE_0__.useCallback)({\n        \"useAppState.useCallback[finishSession]\": async ()=>{\n            setIsLoading(true);\n            setError(null);\n            try {\n                await session.finishSession();\n                console.log('✅ 會話完成');\n                toast({\n                    title: '會話完成',\n                    description: '您可以匯出筆記或開始新的筆記'\n                });\n            } catch (err) {\n                const errorMessage = err instanceof Error ? err.message : '完成會話失敗';\n                setError(errorMessage);\n                console.error('❌ 完成會話失敗:', err);\n                toast({\n                    title: '完成失敗',\n                    description: errorMessage,\n                    variant: 'destructive'\n                });\n            } finally{\n                setIsLoading(false);\n            }\n        }\n    }[\"useAppState.useCallback[finishSession]\"], [\n        session,\n        toast\n    ]);\n    // 開新筆記 - 清空當前資料，狀態回到 default\n    const newNote = (0,react__WEBPACK_IMPORTED_MODULE_0__.useCallback)({\n        \"useAppState.useCallback[newNote]\": async ()=>{\n            setIsLoading(true);\n            setError(null);\n            try {\n                // 如果有活躍會話，先刪除它\n                if (session.currentSession) {\n                    console.log('🗑️ 刪除當前活躍會話:', session.currentSession.id);\n                    await session.deleteSession();\n                    console.log('✅ 會話刪除成功');\n                }\n                // 清空當前資料\n                setAppData({\n                    state: \"default\",\n                    transcriptEntries: [],\n                    editorContent: \"\",\n                    isRecording: false,\n                    recordingTime: 0\n                });\n                // 清除錄音和逐字稿狀態\n                recording.clearTranscripts();\n                transcript.clearTranscripts();\n                notes.clearNote();\n                // 清除本地草稿\n                localStorage.removeItem('draft_note');\n                console.log('🔄 已開始新筆記');\n                toast({\n                    title: '新筆記',\n                    description: '已清空內容，可以開始新的筆記'\n                });\n            } catch (err) {\n                const errorMessage = err instanceof Error ? err.message : '開始新筆記失敗';\n                setError(errorMessage);\n                console.error('❌ 開始新筆記失敗:', err);\n                toast({\n                    title: '操作失敗',\n                    description: errorMessage,\n                    variant: 'destructive'\n                });\n            } finally{\n                setIsLoading(false);\n            }\n        }\n    }[\"useAppState.useCallback[newNote]\"], [\n        session,\n        recording,\n        transcript,\n        notes,\n        toast\n    ]);\n    // 自動儲存筆記內容到本地草稿\n    const saveLocalDraft = (0,react__WEBPACK_IMPORTED_MODULE_0__.useCallback)({\n        \"useAppState.useCallback[saveLocalDraft]\": (content)=>{\n            if (!session.currentSession && content.trim()) {\n                localStorage.setItem('draft_note', content);\n            }\n        }\n    }[\"useAppState.useCallback[saveLocalDraft]\"], [\n        session.currentSession\n    ]);\n    return {\n        // 應用狀態\n        appData,\n        isLoading,\n        error,\n        // 會話管理\n        createNoteSession,\n        createRecordingSession,\n        upgradeToRecording,\n        finishSession,\n        newNote,\n        // 錄音控制\n        startRecording,\n        stopRecording,\n        // 本地草稿\n        saveLocalDraft,\n        // 外部狀態\n        session: session.currentSession,\n        sessionLoading: session.isLoading,\n        sessionError: session.error,\n        // 錄音狀態\n        recordingError: recording.error,\n        // 逐字稿狀態\n        transcriptConnected: transcript.isConnected,\n        transcriptError: transcript.error,\n        transcriptAutoScroll: transcript.autoScrollEnabled,\n        enableAutoScroll: transcript.enableAutoScroll,\n        disableAutoScroll: transcript.disableAutoScroll,\n        scrollToLatest: transcript.scrollToLatest\n    };\n}\n\n\n\n;\n    // Wrapped in an IIFE to avoid polluting the global scope\n    ;\n    (function () {\n        var _a, _b;\n        // Legacy CSS implementations will `eval` browser code in a Node.js context\n        // to extract CSS. For backwards compatibility, we need to check we're in a\n        // browser context before continuing.\n        if (typeof self !== 'undefined' &&\n            // AMP / No-JS mode does not inject these helpers:\n            '$RefreshHelpers$' in self) {\n            // @ts-ignore __webpack_module__ is global\n            var currentExports = module.exports;\n            // @ts-ignore __webpack_module__ is global\n            var prevSignature = (_b = (_a = module.hot.data) === null || _a === void 0 ? void 0 : _a.prevSignature) !== null && _b !== void 0 ? _b : null;\n            // This cannot happen in MainTemplate because the exports mismatch between\n            // templating and execution.\n            self.$RefreshHelpers$.registerExportsForReactRefresh(currentExports, module.id);\n            // A module can be accepted automatically based on its exports, e.g. when\n            // it is a Refresh Boundary.\n            if (self.$RefreshHelpers$.isReactRefreshBoundary(currentExports)) {\n                // Save the previous exports signature on update so we can compare the boundary\n                // signatures. We avoid saving exports themselves since it causes memory leaks (https://github.com/vercel/next.js/pull/53797)\n                module.hot.dispose(function (data) {\n                    data.prevSignature =\n                        self.$RefreshHelpers$.getRefreshBoundarySignature(currentExports);\n                });\n                // Unconditionally accept an update to this module, we'll check if it's\n                // still a Refresh Boundary later.\n                // @ts-ignore importMeta is replaced in the loader\n                module.hot.accept();\n                // This field is set when the previous version of this module was a\n                // Refresh Boundary, letting us know we need to check for invalidation or\n                // enqueue an update.\n                if (prevSignature !== null) {\n                    // A boundary can become ineligible if its exports are incompatible\n                    // with the previous exports.\n                    //\n                    // For example, if you add/remove/change exports, we'll want to\n                    // re-execute the importing modules, and force those components to\n                    // re-render. Similarly, if you convert a class component to a\n                    // function, we want to invalidate the boundary.\n                    if (self.$RefreshHelpers$.shouldInvalidateReactRefreshBoundary(prevSignature, self.$RefreshHelpers$.getRefreshBoundarySignature(currentExports))) {\n                        module.hot.invalidate();\n                    }\n                    else {\n                        self.$RefreshHelpers$.scheduleUpdate();\n                    }\n                }\n            }\n            else {\n                // Since we just executed the code for the module, it's possible that the\n                // new exports made it ineligible for being a boundary.\n                // We only care about the case when we were _previously_ a boundary,\n                // because we already accepted this update (accidental side effect).\n                var isNoLongerABoundary = prevSignature !== null;\n                if (isNoLongerABoundary) {\n                    module.hot.invalidate();\n                }\n            }\n        }\n    })();\n//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,\n//# sourceURL=webpack-internal:///(app-pages-browser)/./hooks/use-app-state.ts\n"));

/***/ })

});